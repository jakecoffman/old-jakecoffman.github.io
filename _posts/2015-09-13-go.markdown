---
layout:     post
title:      "Go"
subtitle:   "why I use Go for all my personal projects"
header-img: "img/post-bg-01.jpg"
---

I've been using Go for all of my personal projects lately. Go strikes a balance
between easy-to-use and no-nonsense that I find compelling. Here are a few
specifics on why I use Go:

<h2 class="section-heading">Explicit</h2>

Go has functions and strong types and not much else. I've been working in
Groovy a lot lately and it's *SO* frustrating that the code you are looking
at might not be what is actually executing thanks to metaClass manipulation
and other tricks. With Go this is not the case. Strong types are the
programmer's friend.

<h2 class="section-heading">Compiles</h2>

Go compiles to a binary. You can cross-compile to a target platform too.
This means I can make a Linux binary on my Windows PC, upload it to
DigitalOcean and start it. So much nonsense with unicorn/gunicorn/apache/nginx
avoided. Go is fast enough you don't need a reverse proxy to serve HTML
(though in real production you would). So easy!

<h2 class="section-heading">Tooling</h2>

Go has great support for editors already since the syntax is simple.
It also comes with various tools to automatically format your code and
auto-generate documentation.

Give Go a shot!

As a bonus, here's an example of how to create a reverse proxy in Go
that you can modify the response:

{% gist 66ce8839b37e40e75a53 %}